CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)
CMAKE_POLICY(VERSION 2.8)

SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH} "${HIP_PATH}/cmake")
EXECUTE_PROCESS(COMMAND ${HIP_PATH}/bin/hipconfig -P OUTPUT_VARIABLE PLATFORM)

IF(NOT Torch_FOUND)
  FIND_PACKAGE(Torch REQUIRED)
ENDIF()
IF(NOT HIP_FOUND)
  FIND_PACKAGE(HIP)
ENDIF()

IF (${PLATFORM} MATCHES "nvcc")
IF(NOT CUDA_FOUND)
  FIND_PACKAGE(CUDA 6.5 REQUIRED)
ENDIF()
ENDIF()

#Â Detect CUDA architecture and get best NVCC flags
IF (${PLATFORM} MATCHES "nvcc")
IF(NOT COMMAND CUDA_SELECT_NVCC_ARCH_FLAGS)
  INCLUDE(${CMAKE_CURRENT_SOURCE_DIR}/cmake/select_compute_arch.cmake)
ENDIF()
CUDA_SELECT_NVCC_ARCH_FLAGS(NVCC_FLAGS_EXTRA $ENV{TORCH_CUDA_ARCH_LIST})
ENDIF()
LIST(APPEND HIP_NVCC_FLAGS ${NVCC_FLAGS_EXTRA})

if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER "4.9.3")
IF (${PLATFORM} MATCHES "nvcc")
    if(CUDA_VERSION VERSION_LESS "8.0")
      MESSAGE(STATUS "Found gcc >=5 and CUDA <= 7.5, adding workaround C++ flags")
      set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_FORCE_INLINES -D_MWAITXINTRIN_H_INCLUDED -D__STRICT_ANSI__")
    endif(CUDA_VERSION VERSION_LESS "8.0")
ENDIF()
  endif(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER "4.9.3")
endif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")

IF(NOT THCUNN_INSTALL_LIB_SUBDIR)
  SET(THCUNN_INSTALL_LIB_SUBDIR "lib" CACHE PATH "THCUNN install library directory")
ENDIF()
EXECUTE_PROCESS(COMMAND ${HIP_PATH}/bin/hipconfig --cpp_config OUTPUT_VARIABLE HIP_CXX_FLAGS)
SET(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} ${HIP_CXX_FLAGS})

INCLUDE_DIRECTORIES(${HIPBLAS_PATH}/include)
FILE(GLOB src-cuda *.cu)

SET(HIP_HCC_FLAGS "${HIP_HCC_FLAGS} -DGENERIC_GRID_LAUNCH=1")
HIP_ADD_LIBRARY(THCUNN MODULE ${src-cuda})

IF(${PLATFORM} STREQUAL "hcc")
  FIND_LIBRARY(HIPBLAS_LIBRARY hipblas_hcc HINTS ${HIPBLAS_PATH}/lib)
  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
  TARGET_LINK_LIBRARIES(THCUNN THC TH hip_hcc ${HIPBLAS_LIBRARY})
ENDIF()

IF(${PLATFORM} STREQUAL "nvcc")
  FIND_LIBRARY(HIPBLAS_LIBRARY hipblas_nvcc HINTS ${HIPBLAS_PATH}/lib)
  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
  TARGET_LINK_LIBRARIES(THCUNN THC TH ${CUDA_cusparse_LIBRARY} ${HIPBLAS_LIBRARY})
ENDIF()

INSTALL(TARGETS THCUNN LIBRARY DESTINATION ${THCUNN_INSTALL_LIB_SUBDIR})
